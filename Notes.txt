Data_GEO (raw_gene_expression_data_in_all_samples) is a m*n matrix, where n is the total number of samples in the study (649 in GSE52428). m is a large number (22277 in GSE52428).

Data (raw_gene_expression) is a m*n matrix where n is the number of samples associated to the selected subject and the number of time points (16 in GSE52428). m is a large number (22277 in GSE52428).

Info (metadata_for_all_samples) is a m*n matrix, where n is the total number of samples in the study (649 in GSE52428). m is the number of info rows (6 in GSE52428).

Subject is a column vector containing 1's. Its length is the number of time points.

Pos (raw_time_points) is a row vector containing the time points, as they come in the original matrix. This may include repeated or invalid values.

Time (time_points, preprocessed_time_points) is a column vector containing all the time points as numeric values, sorted and cleaned up (length is 15 in GSE52428).

gid (list_of_genes) is a column vector containing the IDs of all the genes in the dataset.

INDF (indices_of_genes_sorted_by_F_value) is a column vector containing the list of indices (in gid) of all the genes sorted by their F-value.

IND_DRG (indices_of_DRGs) is a column vector containing the list of indices (in gid) of the top 3,000 genes sorted by their F-value. In other words, IND_DRG is subset of INDF.

GID_DRG (list_of_DRGs) is a column vector containing the IDs of the top 3,000 genes.

DRG{i} is a MxN matrix, where M is the number of time points and N is the number of top genes (3,000). It contains the expression levels of the top N (3,000) genes across the M time points.

gexp2 (gene_expression, preprocessed_gene_expression) is a MxN matrix, where M is the total number of genes in the dataset and N is the number of time points (the length of Time). It contains the expression levels of all the genes across the N time points.

The expression of the top genes is obtained through gexp2(INDF(1:cutoff),:).

fidxcluster (list_of_gene_clusters) is a row vector. Each element is the list of indices (in IND_DRG) of the genes comprising each cluster. The IDs of the genes in cluster u can be retrieved with gid(IND_DRG(fidxcluster{u})).


EAS{i} is an MxM matrix. It is the matrix of parameters. M is the number of modules.

n_clusters{i}{k} is the number of genes in cluster fidxcluster{k}.

I create my own version of n_clusters{i} by running the following.

number_of_genes_in_each_cluster{i} = cellfun(@(x) size(x,1),fidxcluster,'UniformOutput', false);
number_of_genes_in_each_cluster{i} = number_of_genes_in_each_cluster{i}';

In the paper, clusters are numbered by their size. This numbering most likely differs from the indexing used by fidxcluster (i.e., fidxcluster{1} is most likely not the largest cluster). This is corrected by running the following:

[s,ind]=sort(cell2mat(number_of_genes_in_each_cluster{i}),'descend');

After doing the above, when in the paper we talk about M_k then we are talking about cluster fidxcluster{k}{ind(k)}.

A more elegant solution is as follows.

[uselessVariable, cluster_indexes_by_size] = sort(cellfun('size', fidxcluster, 1), 'descend');
clusters_sorted_by_size = fidxcluster(cluster_indexes_by_size);

Then clusters_sorted_by_size is the same type of variable as fidxcluster but sorted from largest to smallest.

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++




%ind2 is the technical index of the cluster. The genes in this cluster can be obtained through gid(IND_DRG(fidxcluster{ind2}))


% clusters{i}{u} is a m*n matrix with the expression values of genes in cluster u (technical index), where m is the number of genes in the cluster and n is the number of time points. 



% The IDs of the genes in the cluster being plotted is gid(IND_DRG(fidxcluster{ind2})). I need to get the expression values of these same genes in the second individual in the same format as clusters{i}{ind2}.



k = ind2;

size(clusters{i}{k})

size(gexp2(IND_DRG(fidxcluster{k}),:))


% I have to check if clusters{i}{k} and gexp2(IND_DRG(fidxcluster{k}),:) contain the same data, even though the rows may be in different order.










